---
AWSTemplateFormatVersion: '2010-09-09'
Description: VPC Network

# ------------------------------------------------------------#
#  Parameters
# ------------------------------------------------------------#
Parameters:
  SystemName:
    Type: String
    Description: sample

Resources:
# ------------------------------------------------------------#
#  VPC
# ------------------------------------------------------------#
  vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-vpc

# ------------------------------------------------------------#
#  InternetGateway
# ------------------------------------------------------------#
  internetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-igw
  attachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref vpc
      InternetGatewayId: !Ref internetGateway

# ------------------------------------------------------------#
#  Subnet
# ------------------------------------------------------------#
  publicSubnet1a:
    Type: AWS::EC2::Subnet
    DependsOn: attachGateway
    Properties:
      AvailabilityZone: ap-northeast-1a
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: 'true'
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-public-subnet-alb-1a
      VpcId: !Ref vpc
  publicSubnet1c:
    Type: AWS::EC2::Subnet
    DependsOn: attachGateway
    Properties:
      AvailabilityZone: ap-northeast-1c
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: 'true'
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-public-subnet-alb-1c
      VpcId: !Ref vpc
  publicSubnet2a:
    Type: AWS::EC2::Subnet
    DependsOn: attachGateway
    Properties:
      AvailabilityZone: ap-northeast-1a
      CidrBlock: 10.0.240.0/24
      MapPublicIpOnLaunch: 'true'
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-public-subnet-admin-1a
      VpcId: !Ref vpc
  publicSubnet2c:
    Type: AWS::EC2::Subnet
    DependsOn: attachGateway
    Properties:
      AvailabilityZone: ap-northeast-1c
      CidrBlock: 10.0.241.0/24
      MapPublicIpOnLaunch: 'true'
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-public-subnet-admin-1c
      VpcId: !Ref vpc
  privateSubnet1a:
    Type: AWS::EC2::Subnet
    DependsOn: attachGateway
    Properties:
      AvailabilityZone: ap-northeast-1a
      CidrBlock: 10.0.8.0/24
      MapPublicIpOnLaunch: 'false'
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-private-subnet-app-1a
      VpcId: !Ref vpc
  privateSubnet1c:
    Type: AWS::EC2::Subnet
    DependsOn: attachGateway
    Properties:
      AvailabilityZone: ap-northeast-1c
      CidrBlock: 10.0.9.0/24
      MapPublicIpOnLaunch: 'false'
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-private-subnet-app-1c
      VpcId: !Ref vpc
  privateSubnet2a:
    Type: AWS::EC2::Subnet
    DependsOn: attachGateway
    Properties:
      AvailabilityZone: ap-northeast-1a
      CidrBlock: 10.0.16.0/24
      MapPublicIpOnLaunch: 'false'
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-private-subnet-db-1c
      VpcId: !Ref vpc
  privateSubnet2c:
    Type: AWS::EC2::Subnet
    DependsOn: attachGateway
    Properties:
      AvailabilityZone: ap-northeast-1c
      CidrBlock: 10.0.17.0/24
      MapPublicIpOnLaunch: 'false'
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-private-subnet-db-1c
      VpcId: !Ref vpc

# ------------------------------------------------------------#
#  ElasticIP, NatGateway
# ------------------------------------------------------------#
  # eIP1a:
  #   Type: AWS::EC2::EIP
  #   Properties:
  #     Domain: vpc
  # nat1a:
  #   Type: AWS::EC2::NatGateway
  #   Properties:
  #     AllocationId:
  #       Fn::GetAtt:
  #         - eIP1a
  #         - AllocationId
  #     SubnetId: !Ref publicSubnet1a
  #     Tags:
  #       - Key: Name
  #         Value: !Sub ${SystemName}-ngw-1a
  # eip1c:
  #   Type: AWS::EC2::EIP
  #   Properties:
  #     Domain: vpc
  # nat1c:
  #   Type: AWS::EC2::NatGateway
  #   Properties:
  #     AllocationId:
  #       Fn::GetAtt:
  #         - eip1c
  #         - AllocationId
  #     SubnetId: !Ref publicSubnet1c
  #     Tags:
  #       - Key: Name
  #         Value: !Sub ${SystemName}-ngw-1c

# ------------------------------------------------------------#
#  RouteTable
# ------------------------------------------------------------#
  publicRouteTable:
    Type: AWS::EC2::RouteTable
    DependsOn: attachGateway
    Properties:
      VpcId: !Ref vpc
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-public-rt
  publicRoute:
    Type: AWS::EC2::Route
    DependsOn: attachGateway
    Properties:
      RouteTableId: !Ref publicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref internetGateway
  # privateRouteTable1a:
  #   Type: AWS::EC2::RouteTable
  #   DependsOn: nat1a
  #   Properties:
  #     VpcId: !Ref vpc
  #     Tags:
  #     - Key: Name
  #       Value: !Sub ${SystemName}-private-rt1a
  # privateRoute1a:
  #   Type: AWS::EC2::Route
  #   DependsOn: nat1a
  #   Properties:
  #     RouteTableId: !Ref privateRouteTable1a
  #     DestinationCidrBlock: 0.0.0.0/0
  #     NatGatewayId: !Ref NAT1a
  # privateRouteTable1c:
  #   Type: AWS::EC2::RouteTable
  #   DependsOn: nat1c
  #   Properties:
  #     VpcId: !Ref vpc
  #     Tags:
  #     - Key: Name
  #       Value: !Sub ${SystemName}-Private-RT1c
  # privateRoute1c:
  #   Type: AWS::EC2::Route
  #   DependsOn: nat1c
  #   Properties:
  #     RouteTableId: !Ref privateRouteTable1c
  #     DestinationCidrBlock: 0.0.0.0/0
  #     NatGatewayId: !Ref nat1c
  # privateRouteTable2:
  #   Type: AWS::EC2::RouteTable
  #   Properties:
  #     VpcId: !Ref vpc
  #     Tags:
  #     - Key: Name
  #       Value: !Sub ${SystemName}-Private-RT2

  publicSubnet1aRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref publicSubnet1a
      RouteTableId: !Ref publicRouteTable
  publicSubnet1cRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref publicSubnet1c
      RouteTableId: !Ref publicRouteTable
  publicSubnet2aRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref publicSubnet2a
      RouteTableId: !Ref publicRouteTable
  publicSubnet2cRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref publicSubnet2c
      RouteTableId: !Ref publicRouteTable
  # privateSubnet1aRouteTableAssociation:
  #   Type: AWS::EC2::SubnetRouteTableAssociation
  #   Properties:
  #     SubnetId: !Ref privateSubnet1a
  #     RouteTableId: !Ref privateRouteTable1a
  # privateSubnet1cRouteTableAssociation:
  #   Type: AWS::EC2::SubnetRouteTableAssociation
  #   Properties:
  #     SubnetId: !Ref privateSubnet1c
  #     RouteTableId: !Ref privateRouteTable1c
  # privateSubnet2aRouteTableAssociation:
  #   Type: AWS::EC2::SubnetRouteTableAssociation
  #   Properties:
  #     SubnetId: !Ref privateSubnet2a
  #     RouteTableId: !Ref privateRouteTable2
  # privateSubnet2cRouteTableAssociation:
  #   Type: AWS::EC2::SubnetRouteTableAssociation
  #   Properties:
  #     SubnetId: !Ref privateSubnet2c
  #     RouteTableId: !Ref privateRouteTable2

# ------------------------------------------------------------#
#  Outputs
# ------------------------------------------------------------#
Outputs:
  vpc:
    Value: !Ref vpc
    Export:
      Name: !Sub ${SystemName}-vpc
  publicSubnet1a:
    Value: !Ref publicSubnet1a
    Export:
      Name: !Sub ${SystemName}-publicsubnet1a
  publicSubnet1c:
    Value: !Ref publicSubnet1c
    Export:
      Name: !Sub ${SystemName}-publicsubnet1c
  publicSubnet2a:
    Value: !Ref publicSubnet2a
    Export:
      Name: !Sub ${SystemName}-publicsubnet2a
  publicSubnet2c:
    Value: !Ref publicSubnet2c
    Export:
      Name: !Sub ${SystemName}-publicsubnet2c
  privateSubnet1a:
    Value: !Ref privateSubnet1a
    Export:
      Name: !Sub ${SystemName}-privatesubnet1a
  privateSubnet1c:
    Value: !Ref privateSubnet1c
    Export:
      Name: !Sub ${SystemName}-privatesubnet1c
  privateSubnet2a:
    Value: !Ref privateSubnet2a
    Export:
      Name: !Sub ${SystemName}-privatesubnet2a
  privateSubnet2c:
    Value: !Ref privateSubnet2c
    Export:
      Name: !Sub ${SystemName}-privatesubnet2c
